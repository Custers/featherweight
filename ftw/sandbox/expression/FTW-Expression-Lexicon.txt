(*LIMIT_RECURSION=10000)(?six)
(?(DEFINE)
  ### Note on Suppressed Callouts: Some token sequences and token synonym alternations expect the constituent tokens to callout, enabling matching
  ###                              of the tokens themselves, rather than the whole sequence. Each supressed callout must not match more than its
  ###                              constituent submatches, since this would cause misalignment in token boundaries when indexing the callout results.
  ###
  ### Submatch naming of Operators: These submactch names follow the pattern "namespace_opNN_operatorname...", where "namespace" is the type of
  ###                               expression the operator is meant for, and "NN" represented as two decimal digits defines the precedence of the
  ###                               operator as defined by http://en.cppreference.com/w/cpp/language/operator_precedence
  ###
  ###
  (?'_sp'                         \s*                                                                                                             (?C001))
  (?'_boundary'                   \b               ) #Suppress callout; it's a zero-width assertion anyway                                        (?C002))
  (?'_comment_open'                                                                                                                               (?C003))
  (?'_comment_close'                                                                                                                              (?C004))
  (?'_valid_comment'                                                                                                                              (?C005))
  (?'_expression_begin'           \A                                                                                                              (?C006))
  (?'_expression_end'             \z                                                                                                              (?C007))
  
  (?'scope_open'                  \(                                                                                                              (?C008))
  (?'scope_close'                 \)                                                                                                              (?C009))

  (?'value_variable_discrete'     \{ [A-Z a-z 0-9 \x20]+ \}                                                                                       (?C010))
  (?'value_variable_analog'       \{ [A-Z a-z 0-9 \x20]+ \}                                                                                       (?C011))
  (?'value_variable_boolexpr'     \[ [A-Z a-z 0-9 \x20]+ \]                                                                                       (?C012))
  (?'value_const_undefined'       (?&_boundary) (?: UNDEFINED  |  UNKNOWN  |  INDETERMINATE ) (?&_boundary)                                       (?C013))
  (?'value_const_discrete1'       (?&_boundary) (?: ON  | OPEN   | HI|HIGH | YES | TRUE|T  ) (?&_boundary)                                        (?C014))
  (?'value_const_discrete0'       (?&_boundary) (?: OFF | CLOSED | LO|LOW  | NO  | FALSE|F ) (?&_boundary)                                        (?C015))
  (?'value_const_boolexpr_true'   (?&_boundary) (?: ALWAYS  | IMMEDIATELY|IMMEDIATE ) (?&_boundary)                                               (?C016))
  (?'value_const_boolexpr_false'  (?&_boundary) (?: NEVER )  (?&_boundary)                                                                        (?C017))

  (?'unit_time'                   (?: seconds|second|sec|s  |  milliseconds|msec|ms  |  minutes|min  | hours|hr ) (?&_boundary)                   (?C018))

  (?'_value_discrete'             (?: (?&value_const_discrete1) | (?&value_const_discrete0) )                                                     (?C019))
  (?'_operand_discrete'           (?: (?&value_variable_discrete) | (?&_value_discrete) )                                                         (?C020))
  (?'op09_infix_discrete_equal'   (?: == | (?&_boundary)EQUALS(?&_boundary) | (?&_boundary)IS(?!\s*NOT)(?&_boundary) )                            (?C021))
  (?'op09_infix_discrete_noteql'  (?: != | <> | (?&_boundary)IS\s*NOT(?&_boundary) )                                                              (?C022))
  (?'_op_infix_discrete'          (?: (?&op09_infix_discrete_equal) | (?&op09_infix_discrete_noteql) )                                            (?C023))
  (?'_expr_discrete_comparison'   (?&_operand_discrete) (?&_sp) (?&_op_infix_discrete) (?&_sp) (?&_operand_discrete)                              (?C024))

  (?'_value_boolexpr'             (?: (?&value_const_boolexpr_true) | (?&value_const_boolexpr_false) | (?&value_const_undefined) )                (?C025))
  (?'_boolexpr_operand'           (?: (?&value_variable_boolexpr) | (?&_value_boolexpr) )                                                         (?C026))
  (?'op03_prefix_boolexpr_not'    (?: NOT | !)                                                                                                    (?C027))
  (?'_boolexpr_op_prefix'         (?: (?&op03_prefix_boolexpr_not) )                                                                              (?C028))
  (?'op13_infix_boolexpr_and'     (?: AND | &&)                                                                                                   (?C029))
  (?'op14_infix_boolexpr_or'      (?: OR | \|\| | \|)                                                                                             (?C030))
  (?'op09_infix_boolexpr_xor'     (?: XOR | !=)                                                                                                   (?C031))
  (?'_boolexpr_op_infix'          (?: (?&op13_infix_boolexpr_and) | (?&op14_infix_boolexpr_or) | (?&op09_infix_boolexpr_xor) )                    (?C032))

  (?'op16_boolexpr_timer'         (?&_boundary) FOR (?&_boundary)                                                                                 (?C033))
  (?'value_boolexpr_timer'        [0-9]*\.?[0-9]+                                                                                                 (?C034))
  (?'_boolexpr_cond_timer'        (?&op16_boolexpr_timer) (?&_sp) (?&value_boolexpr_timer) (?&_sp) (?&unit_time)                                  (?C035))
  (?'_boolexpr_postcondition'     (?: (?&_boolexpr_cond_timer) )                                                                                  (?C036))

  (?'_boolexpr_postconditions'    (?&_boolexpr_postcondition) (?: (?&_sp) (?&_boolexpr_op_infix) (?&_sp) (?&_boolexpr_postcondition) )*           (?C037))
  (?'_boolexpr_evaluation'        (?&_boolexpr_op_prefix)? (?&_sp) (?:(?&_expr_discrete_comparison)|(?&_boolexpr_operand)|(?&_boolexpr_scoped))   (?C038))
  (?'_boolexpr_evaluation_chain'  (?&_boolexpr_evaluation) (?:(?&_sp) (?&_boolexpr_op_infix) (?&_sp) (?&_boolexpr_evaluation))*                   (?C039))
  (?'_boolexpr_scoped'            (?&scope_open) (?&_sp) (?&_boolexpr_evaluation_chain) (?&_sp) (?&scope_close)                                   (?C040))
  (?'_boolexpr_conditioned'       (?&_boolexpr_evaluation_chain)  (?: (?&_sp) (?&_boolexpr_postconditions) )?                                     (?C041))
  )
(?'_entire_input_validated'(?&_expression_begin)(?&_boolexpr_conditioned)(?&_expression_end)(?C042))